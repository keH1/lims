include:
  - project: 'devops/gitlab/template-cicd'
    ref: '${CICDREF}'
    file: 'php-pipeline.yml'

notify_success:
  when: manual

deploy_bitrix:
  image: reg.gitlab.itnap.ru/devops/gitlab/template-cicd:${CICDREF}
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "${SSH_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H -t rsa -T 10 "${INSTANCE_IP}" >> ~/.ssh/known_hosts
  script:
    - |
      ssh support@"${INSTANCE_IP}" bash -s << EOF
        set -euo pipefail
        cd /opt/lims-ulab
        docker rm bitrix || true
        COMPOSE_HTTP_TIMEOUT=360 IMAGE_TAG_BITRIX=${IMAGE_TAG_BITRIX} docker-compose up -d bitrix || { echo "Ошибка запуска docker compose"; exit 1; }
        echo "Деплой Bitrix успешно завершён"
      EOF
  tags:
    - ${GL_CI_GITLAB_K8S_RUNNER}
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"

cleanup_and_push_job:
  stage: cleanup-and-push
  needs:
    - job: deploy:dev
      optional: true
  before_script:
    - cd /opt/forticlient/forticlientsslvpn/64bit
    - tmux kill-session -t vpn_session || true
    - tmux new-session -d -s vpn_session
    - tmux new-window -t vpn_session -n vpn './connect.sh ; bash'
    - sleep 240
    - tmux capture-pane -t vpn_session:vpn -p > /tmp/test.txt
    - cat /tmp/test.txt
  script:
    - nslookup git.mos.ru
    - cd $CI_PROJECT_DIR
    - git config --global user.name "CI Bot"
    - git config --global user.email "ci@bot.com"
    - rm -rf docker-compose.yml Makefile .gitlab-ci.yml ./docker .env Dockerfile .git
    - cd ../
    - rm -rf ./target-repo
    - git clone $TARGET_REPO_URL target-repo
    - cp -r lims/. ./target-repo
    - cd target-repo
    - if git show-ref --quiet refs/heads/mirror; then git branch -D mirror; fi
    - git checkout -b mirror
    - git add .
    - git commit -m "Автоматический пуш из CI"
    - git push -f origin mirror
    - tmux kill-session -t vpn_session || true
  tags:
    - vpn
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - when: manual